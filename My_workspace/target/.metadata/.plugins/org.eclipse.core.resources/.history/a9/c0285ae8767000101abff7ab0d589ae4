/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int32_t ClockControlRegisterAddr = 0x40023830;
int32_t GPIODModeRegister = 0x40020C00;
int32_t GPIODOutputDataRegister = 0x40020C14;

int32_t *pClockControlRegisterAddr = &ClockControlRegisterAddr;
int32_t *pGPIODModeRegister = &GPIODModeRegister;
int32_t *pGPIODOutputDataRegister = &GPIODOutputDataRegister;

int main(void)
{
	//first turn on Clock
	*pClockControlRegisterAddr = *pClockControlRegisterAddr | 0x00000008;
	//Turn the mode register to output
	*pGPIODModeRegister = 0x0;
	*pGPIODModeRegister = *pGPIODModeRegister | 0x01000000;
	//Finally turn on the LED
	*pGPIODOutputDataRegister = 0x0;
	*pGPIODOutputDataRegister = *pGPIODOutputDataRegister | 0x00001000;

    /* Loop forever */
	for(;;);
}
